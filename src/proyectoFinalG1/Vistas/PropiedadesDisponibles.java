package proyectoFinalG1.Vistas;

import java.awt.event.ComponentListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import proyectoFinalG1.Data.Conexion;
import proyectoFinalG1.Data.ContratoData;
import proyectoFinalG1.Data.InmuebleData;
import proyectoFinalG1.Modelos.Inmueble;

/**
 *
 * @author Grupo 1
 */
public class PropiedadesDisponibles extends javax.swing.JInternalFrame {

    InmuebleData id;
    ContratoData cd;
    private DefaultTableModel modelo;
    private ArrayList<Inmueble> listaInmuebles;
    private ArrayList<Inmueble> listaInmueblesDisponibles;

    private Conexion conexion;
    private ComponentListener jInternalFrame;

    /**
     * Creates new form PropiedadesDisponibles
     */
    public PropiedadesDisponibles(Conexion conexion) {
        initComponents();
        id = new InmuebleData(conexion);
        cd = new ContratoData(conexion);
        listaInmuebles = (ArrayList<Inmueble>) id.obtenerInmuebles();
        listaInmueblesDisponibles = (ArrayList<Inmueble>) id.NoAlquilados();
        modelo = new DefaultTableModel();
        armarTabla();
        desactivaCampos();
        jBBuscarPropiedad5.setEnabled(false);
    }

//    private void cargarInmuebles() {
//
//        Collections.sort(listaInmuebles, new Comparator<Inmueble>() {
//            @Override
//            public int compare(Inmueble t, Inmueble t1) {
//                return t.getCodigoInmueble().compareTo(t1.getCodigoInmueble());
//            }
//        });
//        for (Inmueble aux : listaInmuebles) {
//            jCBZona.addItem(aux);
//        }
//    }
    private void cargarInmueblesDisponibles() {
//        Collections.sort(listaInmueblesDisponibles, new Comparator<Inmueble>() {
//            @Override
//            public int compare(Inmueble t, Inmueble t1) {
//                return t.getCodigoInmueble().compareTo(t1.getCodigoInmueble());
//            }
//        });
//        for (Inmueble aux : listaInmueblesDisponibles) {
//            jCBZona.addItem(aux);
//        }
//        

        // Inmueble seleccionado = (Inmueble) jComboBoxAlumnos.getSelectedItem();
        borraFilasTabla();
        ArrayList<Inmueble> lista = (ArrayList) id.NoAlquilados();

        for (Inmueble m : lista) {
            modelo.addRow(new Object[]{m.getIdInmueble(), m.getCodigoInmueble(), m.getTipoLocal(), m.getZona(), m.getSuperficie(), m.getPrecio()});
        }
    }

    private void armarTabla() {
        ArrayList<Object> columnas = new ArrayList<>();
        columnas.add("Numero de Inmueble");
        columnas.add("Codigo de Propiedad");
        columnas.add("Tipo de Propiedad");
        columnas.add("Zona");
        columnas.add("Superficie");
        columnas.add("Precio");

        for (Object it : columnas) {

            modelo.addColumn(it);
        }
        jTPropiedades.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTPropiedades = new javax.swing.JTable();
        jBBuscarPropiedad = new javax.swing.JButton();
        jBCrearContrato = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTPrecio = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTSuperficie = new javax.swing.JTextField();
        jTUsoLocal = new javax.swing.JTextField();
        jBBorrarPropiedad = new javax.swing.JButton();
        jTZona = new javax.swing.JTextField();
        jBSalir = new javax.swing.JButton();
        jBBuscarPropiedad3 = new javax.swing.JButton();
        jBBuscarPropiedad4 = new javax.swing.JButton();
        jBBuscarPropiedad5 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei Light", 0, 24)); // NOI18N
        jLabel1.setText("Propiedades Disponibles");

        jTPropiedades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTPropiedades);

        jBBuscarPropiedad.setText("Buscar Propiedad");
        jBBuscarPropiedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarPropiedadActionPerformed(evt);
            }
        });

        jBCrearContrato.setText("Crear contrato");
        jBCrearContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCrearContratoActionPerformed(evt);
            }
        });

        jLabel2.setText("Zona");

        jLabel3.setText("Superficie m√≠nima");

        jLabel4.setText("Precio Minimo");

        jLabel5.setText("Uso del Local");

        jTSuperficie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTSuperficieActionPerformed(evt);
            }
        });

        jBBorrarPropiedad.setText("Borrar Propiedad");
        jBBorrarPropiedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBorrarPropiedadActionPerformed(evt);
            }
        });

        jTZona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTZonaActionPerformed(evt);
            }
        });

        jBSalir.setText("Salir");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        jBBuscarPropiedad3.setText("Mostrar todas las propiedades disponibles");
        jBBuscarPropiedad3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarPropiedad3ActionPerformed(evt);
            }
        });

        jBBuscarPropiedad4.setText("Mostrar todas las propiedades disponibles segun caracteristicas");
        jBBuscarPropiedad4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarPropiedad4ActionPerformed(evt);
            }
        });

        jBBuscarPropiedad5.setText("Buscar");
        jBBuscarPropiedad5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarPropiedad5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jBBuscarPropiedad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBBorrarPropiedad)
                .addGap(44, 44, 44)
                .addComponent(jBCrearContrato)
                .addGap(31, 31, 31)
                .addComponent(jBSalir)
                .addGap(24, 24, 24))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBBuscarPropiedad4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTSuperficie, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(69, 69, 69)
                                        .addComponent(jTZona, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTUsoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(45, 45, 45)
                        .addComponent(jBBuscarPropiedad5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBBuscarPropiedad3))))
                .addContainerGap(154, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(181, 181, 181))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBBuscarPropiedad4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jTZona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jTSuperficie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jTUsoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jTPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jBBuscarPropiedad5)
                        .addGap(22, 22, 22)))
                .addGap(30, 30, 30)
                .addComponent(jBBuscarPropiedad3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBSalir)
                    .addComponent(jBCrearContrato)
                    .addComponent(jBBorrarPropiedad)
                    .addComponent(jBBuscarPropiedad))
                .addGap(7, 7, 7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTSuperficieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTSuperficieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTSuperficieActionPerformed

    private void jBBorrarPropiedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBorrarPropiedadActionPerformed
        // TODO add your handling code here:
//        Inmueble inmueble = new Inmueble();
//        int ide = -1;
//        ide = Integer.parseInt(jTIDInmueble.getText());
//
//        if (id.borrarInmueble(ide)) {
//            JOptionPane.showMessageDialog(null, "Empleado borrado con Exito");
//            limpiarCampos();
//            desactivaCampos();
//        }
//
//        //Actualiza el jComboBox imnueble para que muestre los datos Actualizados.
//        jCBZona.removeAllItems();
//        listaInmuebles = (ArrayList<Inmueble>) id.obtenerInmuebles();
//        cargarInmuebles();
//        modelo = new DefaultTableModel();
//        cargarInmuebles();
    }//GEN-LAST:event_jBBorrarPropiedadActionPerformed

    private void jBCrearContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCrearContratoActionPerformed
        // TODO add your handling code here:
        jScrollPane1.removeComponentListener(jInternalFrame);
        NuevoContrato nc = new NuevoContrato(conexion);
        nc.setVisible(true);
        jScrollPane1.add(nc);
        //jScrollPane1.moveToFront(nc);
        jScrollPane1.repaint();

//        NuevoContrato contrato = new NuevoContrato(conexion);
//        contrato.setVisible(true);
//        jScrollPane1.add(contrato);
//        //jScrollPane1.moveToFront(menu);
//        jScrollPane1.repaint();
    }//GEN-LAST:event_jBCrearContratoActionPerformed

    private void jTZonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTZonaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTZonaActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBSalirActionPerformed

    private void jBBuscarPropiedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarPropiedadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBBuscarPropiedadActionPerformed

    private void jBBuscarPropiedad3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarPropiedad3ActionPerformed
        // TODO add your handling code here:
        cargarInmueblesDisponibles();

    }//GEN-LAST:event_jBBuscarPropiedad3ActionPerformed

    private void jBBuscarPropiedad4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarPropiedad4ActionPerformed
        // TODO add your handling code here:
        activaCampos();
        jBBuscarPropiedad3.setEnabled(false);
        jBBuscarPropiedad5.setEnabled(true);


    }//GEN-LAST:event_jBBuscarPropiedad4ActionPerformed

    private void jBBuscarPropiedad5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarPropiedad5ActionPerformed
        // TODO add your handling code here:

        String tipo = jTUsoLocal.getText();
        float superficie = Float.parseFloat(jTSuperficie.getText());
        int zona = Integer.parseInt(jTZona.getText());
        double precio = Double.parseDouble(jTPrecio.getText());

        borraFilasTabla();
        ArrayList<Inmueble> lista = (ArrayList) id.PropiedadesConEstasCaracteristicas(zona, superficie, tipo, precio);

        for (Inmueble m : lista) {
            modelo.addRow(new Object[]{m.getIdInmueble(), m.getCodigoInmueble(), m.getTipoLocal(), m.getZona(), m.getSuperficie(), m.getPrecio()});
        }
        limpiarCampos();
        desactivaCampos();

    }//GEN-LAST:event_jBBuscarPropiedad5ActionPerformed

    private void limpiarCampos() {

        jTZona.setText("");
        jTPrecio.setText("");
        //jTPropiedades.setText("");
        jTSuperficie.setText("");
        jTUsoLocal.setText("");

    }

    private void activaCampos() {
        //jTIDInmueble.setEnabled(true);
        jTZona.setEnabled(true);
        jTPrecio.setEnabled(true);
        //jTPropiedades.setEnabled(true);
        jTSuperficie.setEnabled(true);
        jTUsoLocal.setEnabled(true);

    }

    private void desactivaCampos() {
        //jTIDInmueble.setEnabled(false);
        //jTCodigo.setEnabled(false);
        jTPrecio.setEnabled(false);
        //jTPropiedades.setEnabled(false);
        jTSuperficie.setEnabled(false);
        jTUsoLocal.setEnabled(false);
        jTZona.setEnabled(false);

    }

    private void borraFilasTabla() {
        if (modelo != null) {
            int a = modelo.getRowCount() - 1;

            for (int i = a; i >= 0; i--) {

                modelo.removeRow(i);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBorrarPropiedad;
    private javax.swing.JButton jBBuscarPropiedad;
    private javax.swing.JButton jBBuscarPropiedad3;
    private javax.swing.JButton jBBuscarPropiedad4;
    private javax.swing.JButton jBBuscarPropiedad5;
    private javax.swing.JButton jBCrearContrato;
    private javax.swing.JButton jBSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTPrecio;
    private javax.swing.JTable jTPropiedades;
    private javax.swing.JTextField jTSuperficie;
    private javax.swing.JTextField jTUsoLocal;
    private javax.swing.JTextField jTZona;
    // End of variables declaration//GEN-END:variables
}
